<launch>
  <arg name="dataset_path" default = "/home/benchun/dataset/agiprobot/agiprobot_3" />
  <arg name="config_path" default = "$(find object_segmentation)/config/config.yaml" />
  <node name="example" pkg="object_segmentation" type="object_segmentation_node" output="screen">
    <!-- input -->
    <param name="rgb_image_sub_topic"           value="/rgb/image_raw" />
    <param name="rgb_camera_info_sub_topic"     value="/rgb/camera_info" />
    <param name="depth_camera_info_sub_topic"   value="/depth_to_rgb/camera_info" />
    <param name="depth_image_sub_topic"         value="/depth_to_rgb/image_raw" />
    <!-- output -->
    <param name="pub_obj_pcl_topic"              value="object_segmentation" />
    <param name="pub_raw_pcl_topic"              value="raw_pcl" />
    <param name="pub_in_local_frame"             value="true" /> # in map frame
    <param name="local_frame"                    value="new_base_link" /> 
    <param name="world_frame"                    value="map" />
    <!-- config file -->
    <param name="dataset_path"                  value="$(arg dataset_path)" />
    <param name="config_file"                  value="$(arg config_path)" />
  </node>

  <!-- rviz -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find object_segmentation)/rviz/debug.rviz" />

  <!-- Map server -->
  <!-- <arg name="map_file" default="$(find object_segmentation)/maps/map.yaml"/>
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/> -->

   <!-- launch voxblox node, careful with pointcloud, transform, rosparam -->
   <!-- <node name="voxblox_node" pkg="voxblox_ros" type="tsdf_server" output="screen" args="-alsologtostderr" clear_params="true">
    <remap from="pointcloud" to="/example/raw_pcl"/>
    <param name="tsdf_voxel_size" value="0.1" />
    <param name="tsdf_voxels_per_side" value="16" />
    <param name="voxel_carving_enabled" value="true" />
    <param name="color_mode" value="color" />
    <param name="use_tf_transforms" value="true" />
    <param name="world_frame" value="odom" />
    <param name="update_mesh_every_n_sec" value="1.0" />
    <param name="min_time_between_msgs_sec" value="-1.0" />
    <param name="method" value="fast" />
    <param name="use_const_weight" value="false" />
    <param name="allow_clear" value="true" />
    <param name="verbose" value="true" />
    <param name="mesh_filename" value="$(find voxblox_ros)/mesh_results/$(anon cow).ply" />
  </node> -->


</launch>
